---
# Whether to enable a package repository for Docker.
enable_docker_repo: true

# Docker APT repository configuration.
docker_apt_url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}"
docker_apt_repo: "deb {{ docker_apt_url }} {{ ansible_distribution_release }} stable"
docker_apt_key_file: "gpg"
docker_apt_key_id: "0EBFCD88"
docker_apt_package: "docker-ce"

# Docker Yum repository configuration.
docker_yum_url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}"
# FIXME(mgoddard): Use {{ ansible_distribution_major_version | lower }} rather
# than 7.
docker_yum_baseurl: "{{ docker_yum_url }}/7/$basearch/stable"
docker_yum_gpgkey: "{{ docker_yum_url }}/gpg"
docker_yum_gpgcheck: true
docker_yum_package: "docker-ce"

customize_etc_hosts: True

create_kolla_user: True
create_kolla_user_sudoers: "{{ create_kolla_user }}"

kolla_user: "kolla"
kolla_group: "kolla"

enable_host_ntp: False

change_selinux: True

selinux_state: "permissive"

docker_storage_driver: ""
docker_custom_option: ""
docker_custom_config: {}

# Ubuntu 18+ does not have easy_install available due to
# https://bugs.launchpad.net/ubuntu/+source/python-setuptools/+bug/1774419.
# CentOS/RHEL 8 does not have easy_install.
easy_install_available: >-
  {{ not (ansible_distribution == 'Ubuntu' and
          ansible_distribution_major_version is version(18, 'ge'))
     and
     not (ansible_distribution == 'Debian' and
          ansible_distribution_major_version is version(10, 'ge'))
     and
     not (ansible_os_family == 'RedHat' and
          ansible_distribution_major_version is version(8, 'ge')) }}

# Version of python used to execute Ansible modules.
host_python_version: "{{ ansible_python.version.major }}.{{ ansible_python.version.minor }}"
host_python_major_version: "{{ ansible_python.version.major }}"

# Ubuntu 18+ bundles nfs-ganesha 2.6.0 with Ceph Mimic packages,
# which does udp rpcbind test even with NFSv3 disabled - therefore
# rpcbind needs to be installed, when Ceph NFS is enabled.
debian_pkg_install:
 - "{{ docker_apt_package }}"
 - git
 - "python{% if host_python_major_version == '3' %}3{% endif %}-setuptools"
 - "{% if not easy_install_available %}python{% if host_python_major_version == '3' %}3{% endif %}-pip{% endif %}"
 - "{% if virtualenv is not none %}python{% if host_python_major_version == '3' %}3{% endif %}-virtualenv{% endif %}"
 - "{% if enable_host_ntp | bool %}ntp{% endif %}"
 - "{% if enable_ceph_nfs|bool %}rpcbind{% endif %}"
 - "{% if enable_multipathd|bool %}sg3-utils-udev{% endif %}"
 - "{% if not docker_disable_default_iptables_rules | bool %}iptables{% endif %}"

redhat_pkg_install:
 - "{{ docker_yum_package }}"
 - git
 - "{% if host_python_major_version == '2' %}python-setuptools{% endif %}"
 - "{% if not easy_install_available %}python{{ host_python_major_version }}-pip{% endif %}"
 - "{% if virtualenv is not none %}python{{ host_python_major_version }}-virtualenv{% endif %}"
 - "{% if enable_host_ntp | bool %}ntp{% endif %}"
 - sudo
 - "{% if not docker_disable_default_iptables_rules | bool %}iptables{% endif %}"

ubuntu_pkg_removals:
 - lxd
 - lxc
 - libvirt-bin
 - open-iscsi
 - "{% if enable_chrony | bool %}chrony{% endif %}"

redhat_pkg_removals:
 - libvirt
 - libvirt-daemon
 - iscsi-initiator-utils
 - "{% if enable_chrony | bool %}chrony{% endif %}"

# Path to a virtualenv in which to install python packages. If None, a
# virtualenv will not be used.
virtualenv:

# Whether the virtualenv will inherit packages from the global site-packages
# directory. This is typically required for modules such as yum and apt which
# are not available on PyPI.
virtualenv_site_packages: True
