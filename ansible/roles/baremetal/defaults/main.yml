---
# Whether to enable a package repository for Docker.
enable_docker_repo: true

# Docker APT repository configuration.
docker_apt_url: "https://download.docker.com/linux/{{ ansible_facts.distribution | lower }}"
docker_apt_repo: "deb {{ docker_apt_url }} {{ ansible_facts.distribution_release }} stable"
docker_apt_key_file: "gpg"
docker_apt_key_id: "0EBFCD88"
docker_apt_package: "docker-ce"

# Docker Yum repository configuration.
docker_yum_url: "https://download.docker.com/linux/centos"
docker_yum_baseurl: "{{ docker_yum_url }}/$releasever/$basearch/stable"
docker_yum_gpgkey: "{{ docker_yum_url }}/gpg"
docker_yum_gpgcheck: true
docker_yum_package: "docker-ce"

ceph_version: "pacific"
epel_version: "8"
ceph_url: "https://download.ceph.com"

# Ceph APT repository configuration.
ceph_apt_url: "{{ ceph_url }}/debian-{{ ceph_version }}/"
ceph_apt_repo: "deb {{ ceph_apt_url }} {{ ansible_facts.distribution_release }} main"
ceph_apt_key_file: "{{ ceph_url }}/keys/release.gpg"
ceph_apt_key_id: "460F3994"
ceph_apt_package: "ceph-common"

# Ceph Yum repository configuration.
ceph_yum_url: "{{ ceph_url }}/rpm-{{ ceph_version }}/"
ceph_yum_baseurl: "{{ ceph_yum_url }}el{{ epel_version }}/$basearch/"
ceph_yum_gpgkey: "{{ ceph_url }}/keys/release.asc"
ceph_yum_gpgcheck: true
ceph_yum_package: "ceph-common"
epel_yum_package: "epel-release"

customize_etc_hosts: True

create_kolla_user: True
create_kolla_user_sudoers: "{{ create_kolla_user }}"

kolla_user: "kolla"
kolla_group: "kolla"

change_selinux: True

selinux_state: "permissive"

# If true, the host firewall service (firewalld or ufw) will be disabled.
disable_firewall: True

docker_storage_driver: ""
docker_custom_option: ""
docker_custom_config: {}

docker_http_proxy: ""
docker_https_proxy: ""
docker_no_proxy: ""

# Version of python used to execute Ansible modules.
host_python_version: "{{ ansible_facts.python.version.major }}.{{ ansible_facts.python.version.minor }}"

debian_pkg_install:
 - "{{ docker_apt_package }}"
 - git
 - iputils-ping
 - "python3-setuptools"
 - "python3-pip"
 - "{% if virtualenv is not none %}python3-virtualenv{% endif %}"
 - "{% if enable_multipathd|bool %}sg3-utils-udev{% endif %}"
 - "{% if not docker_disable_default_iptables_rules | bool %}iptables{% endif %}"

redhat_pkg_install:
 - "{{ docker_yum_package }}"
 - git
 - iputils
 - "python3-pip"
 - "{% if virtualenv is not none %}python3-virtualenv{% endif %}"
 - sudo
 - "{% if not docker_disable_default_iptables_rules | bool %}iptables{% endif %}"

ubuntu_pkg_removals:
 - lxd
 - lxc
 - libvirt-bin
 - open-iscsi

redhat_pkg_removals:
 - libvirt
 - libvirt-daemon
 - iscsi-initiator-utils

# Path to a virtualenv in which to install python packages. If None, a
# virtualenv will not be used.
virtualenv:

# Whether the virtualenv will inherit packages from the global site-packages
# directory. This is typically required for modules such as yum and apt which
# are not available on PyPI.
virtualenv_site_packages: True
