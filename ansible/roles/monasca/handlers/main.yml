---
- name: Restart monasca-api container
  vars:
    service_name: "monasca-api"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-log-api container
  vars:
    service_name: "monasca-log-api"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-log-transformer container
  vars:
    service_name: "monasca-log-transformer"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-log-persister container
  vars:
    service_name: "monasca-log-persister"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-log-metrics container
  vars:
    service_name: "monasca-log-metrics"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-thresh container
  vars:
    service_name: "monasca-thresh"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-notification container
  vars:
    service_name: "monasca-notification"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-persister container
  vars:
    service_name: "monasca-persister"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-agent-collector container
  vars:
    service_name: "monasca-agent-collector"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    pid_mode: "{{ service.pid_mode }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-agent-forwarder container
  vars:
    service_name: "monasca-agent-forwarder"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart monasca-agent-statsd container
  vars:
    service_name: "monasca-agent-statsd"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart first monasca-grafana container
  listen: Restart monasca-grafana container
  vars:
    service_name: "monasca-grafana"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"
    - inventory_hostname == groups[service.group]|first

- name: Waiting for monasca-grafana to start on first node
  listen: Restart monasca-grafana container
  vars:
    service_name: "monasca-grafana"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_toolbox:
    module_name: uri
    module_args:
      url: "http://{{ api_interface_address | put_address_in_context('url') }}:{{ monasca_grafana_server_port }}/login"
      status_code: 200
  register: result
  until: result.get('status') == 200
  retries: 40
  delay: 2
  when:
    - kolla_action != "config"
    - inventory_hostname == groups[service.group]|first

- name: Restart remaining monasca-grafana containers
  listen: Restart monasca-grafana container
  vars:
    service_name: "monasca-grafana"
    service: "{{ monasca_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"
    - inventory_hostname != groups[service.group]|first
