---
project_name: "karbor"

karbor_services:
  karbor-api:
    container_name: karbor_api
    group: karbor-api
    enabled: true
    image: "{{ karbor_api_image_full }}"
    volumes: "{{ karbor_api_default_volumes + karbor_api_extra_volumes }}"
    dimensions: "{{ karbor_api_dimensions }}"
    haproxy:
      karbor_api:
        enabled: "{{ enable_karbor }}"
        mode: "http"
        external: false
        port: "{{ karbor_api_port }}"
      karbor_api_external:
        enabled: "{{ enable_karbor }}"
        mode: "http"
        external: true
        port: "{{ karbor_api_port }}"
  karbor-protection:
    container_name: karbor_protection
    group: karbor-protection
    enabled: true
    image: "{{ karbor_protection_image_full }}"
    volumes: "{{ karbor_protection_default_volumes + karbor_protection_extra_volumes }}"
    dimensions: "{{ karbor_protection_dimensions }}"
  karbor-operationengine:
    container_name: karbor_operationengine
    group: karbor-operationengine
    enabled: true
    image: "{{ karbor_operationengine_image_full }}"
    volumes: "{{ karbor_operationengine_default_volumes + karbor_operationengine_extra_volumes }}"
    dimensions: "{{ karbor_operationengine_dimensions }}"


####################
# Database
####################
karbor_database_name: "karbor"
karbor_database_user: "{% if use_preconfigured_databases | bool and use_common_mariadb_user | bool %}{{ database_user }}{% else %}karbor{% endif %}"
karbor_database_address: "{{ database_address | put_address_in_context('url') }}:{{ database_port }}"


####################
# Docker
####################
karbor_install_type: "{{ kolla_install_type }}"
karbor_tag: "{{ openstack_tag }}"

karbor_protection_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/{{ kolla_base_distro }}-{{ karbor_install_type }}-karbor-protection"
karbor_protection_tag: "{{ karbor_tag }}"
karbor_protection_image_full: "{{ karbor_protection_image }}:{{ karbor_protection_tag }}"


karbor_operationengine_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/{{ kolla_base_distro }}-{{ karbor_install_type }}-karbor-operationengine"
karbor_operationengine_tag: "{{ karbor_tag }}"
karbor_operationengine_image_full: "{{ karbor_operationengine_image }}:{{ karbor_operationengine_tag }}"

karbor_api_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/{{ kolla_base_distro }}-{{ karbor_install_type }}-karbor-api"
karbor_api_tag: "{{ karbor_tag }}"
karbor_api_image_full: "{{ karbor_api_image }}:{{ karbor_api_tag }}"

karbor_api_dimensions: "{{ default_container_dimensions }}"
karbor_protection_dimensions: "{{ default_container_dimensions }}"
karbor_operationengine_dimensions: "{{ default_container_dimensions }}"

karbor_protection_default_volumes:
  - "{{ node_config_directory }}/karbor-protection/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
  - "kolla_logs:/var/log/kolla/"
karbor_operationengine_default_volumes:
  - "{{ node_config_directory }}/karbor-operationengine/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
  - "kolla_logs:/var/log/kolla/"
karbor_api_default_volumes:
  - "{{ node_config_directory }}/karbor-api/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
  - "kolla_logs:/var/log/kolla/"
karbor_extra_volumes: "{{ default_extra_volumes }}"
karbor_protection_extra_volumes: "{{ karbor_extra_volumes }}"
karbor_operationengine_extra_volumes: "{{ karbor_extra_volumes }}"
karbor_api_extra_volumes: "{{ karbor_extra_volumes }}"

####################
# OpenStack
####################
karbor_admin_endpoint: "{{ admin_protocol }}://{{ kolla_internal_fqdn | put_address_in_context('url') }}:{{ karbor_api_port }}/v1/%(project_id)s"
karbor_internal_endpoint: "{{ internal_protocol }}://{{ kolla_internal_fqdn | put_address_in_context('url') }}:{{ karbor_api_port }}/v1/%(project_id)s"
karbor_public_endpoint: "{{ public_protocol }}://{{ kolla_external_fqdn | put_address_in_context('url') }}:{{ karbor_api_port }}/v1/%(project_id)s"

karbor_logging_debug: "{{ openstack_logging_debug }}"

karbor_keystone_user: "karbor"

openstack_karbor_auth: "{{ openstack_auth }}"


####################
# Notification
####################
karbor_notification_topics:
  - name: notifications
    enabled: "{{ enable_ceilometer | bool }}"

karbor_enabled_notification_topics: "{{ karbor_notification_topics | selectattr('enabled', 'equalto', true) | list }}"

####################
# Keystone
####################
karbor_ks_services:
  - name: "karbor"
    type: "data-protect"
    description: "Application Data Protection Service"
    endpoints:
      - {'interface': 'admin', 'url': '{{ karbor_admin_endpoint }}'}
      - {'interface': 'internal', 'url': '{{ karbor_internal_endpoint }}'}
      - {'interface': 'public', 'url': '{{ karbor_public_endpoint }}'}

karbor_ks_users:
  - project: "service"
    user: "{{ karbor_keystone_user }}"
    password: "{{ karbor_keystone_password }}"
    role: "admin"
